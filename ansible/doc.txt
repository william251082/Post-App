ansible localhost -m command - "/bin/echo 'hi'"
ansible localhost -m ping
ansible localhost -m composer
ansible localhost -m composer -a "working_dir=./ no_dev=false"
ansible localhost -a "rm -rf vendor"
ansible 127.0.0.1 -m ping -i ansible/hosts.ini
ansible local -m ping -i ansible/hosts.ini
ansible local --list-hosts -i ansible/hosts.ini
ansible vb -m ping -i ansible/hosts.ini

ssh vagrant@192.168.33.10
password vagrant

ansible-playbook ansible/playbook.yml -i ansible/hosts.ini
ansible-playbook ansible/playbook.yml -i ansible/hosts.ini -l vb

php_packages:
  - "php{{ php_version }}"
  # - "php{{ php_version }}-apcu"
  - "php{{ php_version }}-cli"
  - "php{{ php_version }}-common"
  - "php{{ php_version }}-curl"
  - "php{{ php_version }}-dev"
  - "php{{ php_version }}-fpm"
  - "php{{ php_version }}-gd"
  - "php{{ php_version }}-imap"
  - "php{{ php_version }}-json"
  - "php{{ php_version }}-mbstring"
  - "php{{ php_version }}-mcrypt"
  - "php{{ php_version }}-opcache"
  - "php{{ php_version }}-sqlite3"
  - "php{{ php_version }}-xml"
  - "php{{ php_version }}-yaml"

php -i | grep mysql
php -i | grep timezone
php --ini

php bin/symfony-requirements
composer show

templates/symfony.conf

tail /var/log/nginx/prisitine-app.dev_error.log

sudo chmod 555 var/
sudo rm -rf var/cache/*
ansible-playbook ansible/playbook.yml -i ansible/hosts.ini -t permissions
ansible-playbook ansible/playbook.yml -i ansible/hosts.ini -t deploy
ansible-playbook ansible/playbook.yml -i ansible/hosts.ini -t --skip-tags deploy

Detect wether it created or not created the database
register: db_create_result

- debug
    var: db_create_result

ansible-galaxy install DavidWittman.redis
ansible-galaxy install DavidWittman.redis --help

cat app/config/parameters.yml

ansible-vault create ansible/vars/vault.yml

ansible-playbook ansible/playbook.yml -i ansible/hosts.ini -t deploy --ask-vault-pass

ansible-vault edit ansible/vars/vault.yml

ansible-playbook ansible/aws.yml -i ansible/hosts.ini --ask-vault-pass


ansible-playbook ansible/aws.yml -e 'ansible_python_interpreter=/usr/local/bin/python'

which python
pip list boto | grep boto
ansible --version
python -V
