---
- hosts: vb

  vars:
    symfony_root_dir: "/var/www/project"
    php_version: 8.0

  tasks:
    - ping: ~

    - name: Update APT package manager repositories cache
      apt:
        update_cache: yes
      become: true

    - name: Upgrade install packages
      apt:
        upgrade: safe
      become: true

    - name: Install low-level utilities
      become: true
      apt:
        name: ['zip', 'unzip']

    - name: Install Git
      become: true
      apt:
        name: git
        state: latest

    - name: Install Nginx web server
      become: true
      apt:
        name: nginx
        state: latest

    - name: Install Mysql DB server
      become: true
      apt:
        name: mysql-server
        state: latest

    - name: Add PHP 8 PPA repository
      become: true
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: Install PHP packages
      become: true
      apt:
        name: ['php{{ php_version }}-common', 'php{{ php_version }}-mysql', 'php{{ php_version }}-xml',
               'php{{ php_version }}-fpm', 'php{{ php_version }}-intl', 'php{{ php_version }}-curl',
               'php{{ php_version }}-gd', 'php{{ php_version }}-imagick', 'php{{ php_version }}-cli',
               'php{{ php_version }}-dev', 'php{{ php_version }}-imap', 'php{{ php_version }}-mbstring',
               'php{{ php_version }}-opcache', 'php{{ php_version }}-soap', 'php{{ php_version }}-zip']
        state: latest
    - name: Set date.timezone for CLI
      become: true
      lineinfile:
        dest: "/etc/php/{{ php_version }}/cli/php.ini"
        regexp: "date.timezone ="
        line: "date.timezone = UTC"

    - name: Set date.timezone for FPM
      become: true
      lineinfile:
        dest: "/etc/php/{{ php_version }}/fpm/php.ini"
        regexp: "date.timezone ="
        line: "date.timezone = UTC"

    - name: Create a project directory and set its permission
      become: true
      file:
        path: "{{ symfony_root_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        recurse: yes

    - name: Checkout git repository
      git:
        repo: https://github.com/william251082/pristine-app
        dest: "/var/www/project"
        force: yes

    - name: Download Composer
      script: scripts/install-composer.sh

    - name: Move Composer Locally
      become: true
      command: "mv composer.phar /usr/local/bin/composer"

    - name: Set Permissions on Composer
      become: true
      file:
        path: /usr/local/bin/composer
        mode: "a+x"

    - name: Install Composer's Dependencies
      composer:
        working_dir: "{{ symfony_root_dir }}"
        no_dev: no