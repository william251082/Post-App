---
# don't execute: Executing script cache:clear [OK]
#  Executing script assets:install public [OK]
#- name: Install Composer's dependencies
#  composer:
#    working_dir: "{{ symfony_root_dir }}"
#    no_dev: "{{ 'yes' if ('prod' == symfony_env) else 'no' }}"
#  when: code_changed
#  tags:
#    - deploy
- name: Fix var directory permissions
  file:
    path: "{{ symfony_var_dir }}"
    state: directory
    mode: 0777
    recurse: yes
  changed_when: false
  tags:
    - permissions
    - deploy

- name: Set Symfony secret in parameters.yml
  lineinfile:
    dest: "{{ symfony_root_dir }}/.env"
    regexp: "APP_SECRET="
    line: "APP_SECRET={{ symfony_secret }}"
  tags:
    - deploy

#- name: Set Loggly token in parameters.yml
#  lineinfile:
#    dest: "{{ symfony_root_dir }}/.env"
#    regexp: "LOGGLY_TOKEN="
#    line: "LOGGLY_TOKEN={{ loggly_token }}"
#  tags:
#    - deploy
## Symfony console commands
#- name: Create DB if not exists
#  command: '{{ symfony_console_path }} doctrine:database:create --if-not-exists'
#  register: db_create_result
#  changed_when: "not db_create_result.stdout|search('already exists. Skipped')"
#  tags:
#    - deploy
#
#- name: Execute migrations
#  command: '{{ symfony_console_path }} doctrine:migrations:migrate --no-interaction'
#  register: db_migrations_result
#  changed_when: "not db_migrations_result.stdout|search('No migrations to execute')"
#  tags:
#    - deploy
#  when: code_changed
#
#- name: Load data fixtures
#  command: '{{ symfony_console_path }} hautelook_alice:doctrine:fixtures:load --no-interaction'
#  when: symfony_env != "prod"
#  changed_when: false
#  tags:
#    - deploy

- name: Clear cache
  command: '{{ symfony_console_path }} cache:clear --env={{ symfony_env }}'
  changed_when: false
  tags:
    - deploy
  when: code_changed